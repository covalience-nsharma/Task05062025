name: cicd-workflow to create docker image and upload into Dockerhub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # node-version: [18.x, 20.x]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # - name: npm install and build
      #   run: |
      #     npm install
      #     npm run build
      #   env:
      #     CI: true
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker Image
        env: 
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/task05062025:${IMAGE_TAG} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/task05062025:${IMAGE_TAG}
      
      - name: Setup SSH and Deploy Docker Container
        env:
          DOCKER_PAT: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG: ${{ github.sha }}
          SSH_PRIVATE_KEY: ${{ secrets.MY_SECRET }}
        run: |
          # Write the SSH private key to a file
          echo "${SSH_PRIVATE_KEY}" > mysecret
          chmod 400 mysecret
      
          # SSH into the server and run Docker commands
          ssh -o StrictHostKeyChecking=no -i mysecret ubuntu@training.covalience.tech <<EOF
            echo "${DOCKER_PAT}" | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
            sudo docker pull ${DOCKERHUB_USERNAME}/task05062025:${IMAGE_TAG}
            sudo docker run -d -p 3050:80 --name task05062025_container_new1 ${DOCKERHUB_USERNAME}/task05062025:${IMAGE_TAG}
          EOF
